
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUALDADDISTINTOleftMAYORMENORMAYIGUALMENIGUALleftMASMENOSleftPORDIVIDIDOleftPOTENCIAleftMODULOrightNOTrightUMENOSAND BEGIN CHAR COMA CORDER CORIZQ DECIMAL DISTINTO DIVIDIDO DOSPUNTOS ELSE ELSEIF END ENTERO FALSE FOR ID IF IGUAL IGUALDAD IN MAS MAYIGUAL MAYOR MENIGUAL MENOR MENOS MODULO MUTABLE NOT NOTHING OR PARDER PARIZQ POR POTENCIA PRINT PRINTLN PTCOMA PUNTO STRING STRUCT TBOOL TCHAR TFLOAT64 TINT64 TNULO TRUE TSTRING WHILEstart : instruccionesinstrucciones    : instrucciones instruccion \n                        | instruccion instruccion  : printInst PTCOMA\n                    | asignacion PTCOMA\n                    | structs PTCOMA\n                    | ifInst PTCOMA\n                    | whileInst PTCOMA\n                    | forInst PTCOMAllamadaExp   : ID PARIZQ paramExp PARDER\n                    | ID PARIZQ PARDERparamExp     : paramExp COMA expresion\n                    | expresionprintInst : PRINT PARIZQ paramExp PARDERprintInst : PRINTLN PARIZQ paramExp PARDERasignacion   : ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo\n                    | ID IGUAL expresion\n                    | ID PUNTO ID IGUAL expresiontipo : TINT64\n            | TFLOAT64\n            | TSTRING\n            | TBOOL\n            | TCHAR\n            | TNULOstructs  : MUTABLE STRUCT ID atributos END\n                | STRUCT ID atributos ENDatributos    : atributos atributo\n                    | atributoatributo : ID DOSPUNTOS DOSPUNTOS tipo PTCOMA\n                | ID PTCOMAarreglo  : CORIZQ paramExp CORDER\n                | ID listaIndiceslistaIndices : listaIndices indice\n                    | indiceindice   : CORIZQ expresion CORDERrango    : expresion DOSPUNTOS expresion\n                | BEGIN DOSPUNTOS expresion\n                | expresion DOSPUNTOS END\n                | BEGIN DOSPUNTOS ENDacceso   : acceso PUNTO acceso\n                | ID PUNTO ID\n                | arreglo PUNTO arreglo\n                | arreglo PUNTO ID\n                | ID PUNTO arreglo\n                | ID\n                | arreglobloque : instruccionesifInst   : IF expresion bloque END\n                | IF expresion bloque ELSE bloque END\n                | IF expresion bloque elseIfInst ENDelseIfInst   : ELSEIF expresion bloque\n                    | ELSEIF expresion bloque ELSE bloque\n                    | ELSEIF expresion bloque elseIfInstwhileInst    : WHILE expresion bloque ENDforInst    : FOR ID IN expresion bloque ENDexpresion    : expresion MAS expresion\n                    | expresion MENOS expresion\n                    | expresion POR expresion\n                    | expresion DIVIDIDO expresion\n                    | expresion POTENCIA expresion\n                    | expresion MODULO expresion\n                    \n                    | expresion MAYOR expresion\n                    | expresion MENOR expresion\n                    | expresion MAYIGUAL expresion\n                    | expresion MENIGUAL expresion\n                    | expresion IGUALDAD expresion\n                    | expresion DISTINTO expresion\n                    \n                    | expresion AND expresion\n                    | expresion OR expresionexpresion    : MENOS expresion %prec UMENOS\n                    | NOT expresion %prec UMENOSexpresion : PARIZQ expresion PARDERexpresion    : ENTERO\n                    | DECIMAL\n                    | STRING\n                    | CHAR\n                    | TRUE\n                    | FALSE\n                    | NOTHING\n                    | rango\n                    | acceso\n                    | llamadaExp'
    
_lr_action_items = {'PRINT':([0,2,3,18,19,20,21,22,23,24,31,35,36,37,38,39,40,41,42,43,44,46,47,49,76,77,78,84,85,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,132,133,134,136,144,145,146,160,],[10,10,-3,-2,-4,-5,-6,-7,-8,-9,10,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,10,10,-70,-71,-32,-34,10,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,-11,-33,-42,-43,-31,10,10,-10,-35,10,]),'PRINTLN':([0,2,3,18,19,20,21,22,23,24,31,35,36,37,38,39,40,41,42,43,44,46,47,49,76,77,78,84,85,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,132,133,134,136,144,145,146,160,],[11,11,-3,-2,-4,-5,-6,-7,-8,-9,11,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,11,11,-70,-71,-32,-34,11,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,-11,-33,-42,-43,-31,11,11,-10,-35,11,]),'ID':([0,2,3,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,56,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,90,92,94,95,96,98,100,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,132,133,134,136,144,145,146,159,160,],[12,12,-3,30,46,46,50,-2,-4,-5,-6,-7,-8,-9,46,46,46,55,56,57,12,46,46,46,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,46,12,57,57,-28,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,12,-70,-71,123,46,126,46,-32,-34,46,133,46,46,46,46,57,-30,-27,12,46,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,-11,-33,-42,-43,-31,12,12,-10,-35,-29,12,]),'MUTABLE':([0,2,3,18,19,20,21,22,23,24,31,35,36,37,38,39,40,41,42,43,44,46,47,49,76,77,78,84,85,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,132,133,134,136,144,145,146,160,],[13,13,-3,-2,-4,-5,-6,-7,-8,-9,13,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,13,13,-70,-71,-32,-34,13,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,-11,-33,-42,-43,-31,13,13,-10,-35,13,]),'STRUCT':([0,2,3,13,18,19,20,21,22,23,24,31,35,36,37,38,39,40,41,42,43,44,46,47,49,76,77,78,84,85,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,132,133,134,136,144,145,146,160,],[14,14,-3,29,-2,-4,-5,-6,-7,-8,-9,14,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,14,14,-70,-71,-32,-34,14,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,-11,-33,-42,-43,-31,14,14,-10,-35,14,]),'IF':([0,2,3,18,19,20,21,22,23,24,31,35,36,37,38,39,40,41,42,43,44,46,47,49,76,77,78,84,85,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,132,133,134,136,144,145,146,160,],[15,15,-3,-2,-4,-5,-6,-7,-8,-9,15,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,15,15,-70,-71,-32,-34,15,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,-11,-33,-42,-43,-31,15,15,-10,-35,15,]),'WHILE':([0,2,3,18,19,20,21,22,23,24,31,35,36,37,38,39,40,41,42,43,44,46,47,49,76,77,78,84,85,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,132,133,134,136,144,145,146,160,],[16,16,-3,-2,-4,-5,-6,-7,-8,-9,16,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,16,16,-70,-71,-32,-34,16,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,-11,-33,-42,-43,-31,16,16,-10,-35,16,]),'FOR':([0,2,3,18,19,20,21,22,23,24,31,35,36,37,38,39,40,41,42,43,44,46,47,49,76,77,78,84,85,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,132,133,134,136,144,145,146,160,],[17,17,-3,-2,-4,-5,-6,-7,-8,-9,17,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,17,17,-70,-71,-32,-34,17,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,-11,-33,-42,-43,-31,17,17,-10,-35,17,]),'$end':([1,2,3,18,19,20,21,22,23,24,],[0,-1,-3,-2,-4,-5,-6,-7,-8,-9,]),'END':([3,18,19,20,21,22,23,24,58,59,60,75,76,81,89,94,96,98,100,103,142,147,157,159,161,162,],[-3,-2,-4,-5,-6,-7,-8,-9,99,-28,101,120,-47,125,135,120,140,-30,-27,143,156,158,-51,-29,-53,-52,]),'ELSE':([3,18,19,20,21,22,23,24,60,76,157,],[-3,-2,-4,-5,-6,-7,-8,-9,102,-47,160,]),'ELSEIF':([3,18,19,20,21,22,23,24,60,76,157,],[-3,-2,-4,-5,-6,-7,-8,-9,104,-47,104,]),'PTCOMA':([4,5,6,7,8,9,35,36,37,38,39,40,41,42,43,44,46,47,54,57,77,78,84,85,91,93,99,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,132,133,134,135,139,140,143,145,146,148,149,150,151,152,153,154,155,156,158,],[19,20,21,22,23,24,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,-17,98,-70,-71,-32,-34,-14,-15,-26,-48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,-11,-33,-42,-43,-31,-54,-18,-25,-50,-10,-35,-16,-19,-20,-21,-22,-23,-24,159,-49,-55,]),'PARIZQ':([10,11,15,16,25,26,27,32,33,34,46,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[25,26,34,34,34,34,34,34,34,34,83,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'IGUAL':([12,55,],[27,95,]),'PUNTO':([12,43,46,47,84,85,122,123,126,127,130,132,133,134,146,],[28,80,82,87,-32,-34,80,82,-41,-44,-33,-42,-43,-31,-35,]),'MENOS':([15,16,25,26,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,52,54,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,83,84,85,86,90,92,94,95,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[32,32,32,32,32,62,32,32,32,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,32,62,62,62,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-70,-71,62,32,32,-32,-34,32,32,32,32,32,32,-56,-57,-58,-59,-60,-61,62,62,62,62,62,62,62,62,62,-38,-72,-40,-45,62,-39,-41,-44,-11,-33,62,-42,-43,-31,62,62,62,62,-10,-35,]),'NOT':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'ENTERO':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'DECIMAL':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'STRING':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'CHAR':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'TRUE':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'FALSE':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'NOTHING':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'BEGIN':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'CORIZQ':([15,16,25,26,27,32,33,34,46,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,81,82,83,84,85,86,87,90,92,94,95,104,123,126,130,133,146,],[48,48,48,48,48,48,48,48,86,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,86,-34,48,48,48,48,48,48,48,86,86,-33,86,-35,]),'MAS':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[61,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,61,61,61,-70,-71,61,-32,-34,-56,-57,-58,-59,-60,-61,61,61,61,61,61,61,61,61,61,-38,-72,-40,-45,61,-39,-41,-44,-11,-33,61,-42,-43,-31,61,61,61,61,-10,-35,]),'POR':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[63,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,63,63,63,-70,-71,63,-32,-34,63,63,-58,-59,-60,-61,63,63,63,63,63,63,63,63,63,-38,-72,-40,-45,63,-39,-41,-44,-11,-33,63,-42,-43,-31,63,63,63,63,-10,-35,]),'DIVIDIDO':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[64,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,64,64,64,-70,-71,64,-32,-34,64,64,-58,-59,-60,-61,64,64,64,64,64,64,64,64,64,-38,-72,-40,-45,64,-39,-41,-44,-11,-33,64,-42,-43,-31,64,64,64,64,-10,-35,]),'POTENCIA':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[65,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,65,65,65,-70,-71,65,-32,-34,65,65,65,65,-60,-61,65,65,65,65,65,65,65,65,65,-38,-72,-40,-45,65,-39,-41,-44,-11,-33,65,-42,-43,-31,65,65,65,65,-10,-35,]),'MODULO':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[66,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,66,66,66,-70,-71,66,-32,-34,66,66,66,66,66,-61,66,66,66,66,66,66,66,66,66,-38,-72,-40,-45,66,-39,-41,-44,-11,-33,66,-42,-43,-31,66,66,66,66,-10,-35,]),'MAYOR':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[67,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,67,67,67,-70,-71,67,-32,-34,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,67,67,67,67,67,-38,-72,-40,-45,67,-39,-41,-44,-11,-33,67,-42,-43,-31,67,67,67,67,-10,-35,]),'MENOR':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[68,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,68,68,68,-70,-71,68,-32,-34,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,68,68,68,68,68,-38,-72,-40,-45,68,-39,-41,-44,-11,-33,68,-42,-43,-31,68,68,68,68,-10,-35,]),'MAYIGUAL':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[69,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,69,69,69,-70,-71,69,-32,-34,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,69,69,69,69,69,-38,-72,-40,-45,69,-39,-41,-44,-11,-33,69,-42,-43,-31,69,69,69,69,-10,-35,]),'MENIGUAL':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[70,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,70,70,70,-70,-71,70,-32,-34,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,70,70,70,70,70,-38,-72,-40,-45,70,-39,-41,-44,-11,-33,70,-42,-43,-31,70,70,70,70,-10,-35,]),'IGUALDAD':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[71,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,71,71,71,-70,-71,71,-32,-34,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,71,71,71,-38,-72,-40,-45,71,-39,-41,-44,-11,-33,71,-42,-43,-31,71,71,71,71,-10,-35,]),'DISTINTO':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,72,72,72,-70,-71,72,-32,-34,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,72,72,72,-38,-72,-40,-45,72,-39,-41,-44,-11,-33,72,-42,-43,-31,72,72,72,72,-10,-35,]),'AND':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[73,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,73,73,73,-70,-71,73,-32,-34,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,73,73,-38,-72,-40,-45,73,-39,-41,-44,-11,-33,73,-42,-43,-31,73,73,73,73,-10,-35,]),'OR':([31,35,36,37,38,39,40,41,42,43,44,46,47,49,52,54,77,78,79,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[74,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,74,74,74,-70,-71,74,-32,-34,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,74,-38,-72,-40,-45,74,-39,-41,-44,-11,-33,74,-42,-43,-31,74,74,74,74,-10,-35,]),'DOSPUNTOS':([31,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,54,57,77,78,79,84,85,94,97,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,137,139,144,145,146,],[75,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,81,-45,-46,75,75,94,97,-70,-71,75,-32,-34,138,141,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,75,-38,-72,-40,-45,75,-39,-41,-44,-11,-33,75,-42,-43,-31,75,75,75,75,-10,-35,]),'PARDER':([35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,77,78,79,83,84,85,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,137,145,146,],[-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,91,-13,93,-70,-71,121,129,-32,-34,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,145,-11,-33,-42,-43,-31,-12,-10,-35,]),'COMA':([35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,77,78,84,85,88,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,137,145,146,],[-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,92,-13,92,-70,-71,-32,-34,92,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,92,-11,-33,-42,-43,-31,-12,-10,-35,]),'CORDER':([35,36,37,38,39,40,41,42,43,44,46,47,52,77,78,84,85,88,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,137,145,146,],[-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,-13,-70,-71,-32,-34,134,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-36,-38,-72,-40,-45,-37,-39,-41,-44,-11,-33,146,-42,-43,-31,-12,-10,-35,]),'IN':([50,],[90,]),'TINT64':([138,141,],[149,149,]),'TFLOAT64':([138,141,],[150,150,]),'TSTRING':([138,141,],[151,151,]),'TBOOL':([138,141,],[152,152,]),'TCHAR':([138,141,],[153,153,]),'TNULO':([138,141,],[154,154,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'instrucciones':([0,31,49,102,136,144,160,],[2,76,76,76,76,76,76,]),'instruccion':([0,2,31,49,76,102,136,144,160,],[3,18,3,3,18,3,3,3,3,]),'printInst':([0,2,31,49,76,102,136,144,160,],[4,4,4,4,4,4,4,4,4,]),'asignacion':([0,2,31,49,76,102,136,144,160,],[5,5,5,5,5,5,5,5,5,]),'structs':([0,2,31,49,76,102,136,144,160,],[6,6,6,6,6,6,6,6,6,]),'ifInst':([0,2,31,49,76,102,136,144,160,],[7,7,7,7,7,7,7,7,7,]),'whileInst':([0,2,31,49,76,102,136,144,160,],[8,8,8,8,8,8,8,8,8,]),'forInst':([0,2,31,49,76,102,136,144,160,],[9,9,9,9,9,9,9,9,9,]),'expresion':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[31,49,52,52,54,77,78,79,52,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,52,131,136,137,119,139,144,]),'rango':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'acceso':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,81,83,86,90,92,94,95,104,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,122,43,43,43,43,43,43,43,43,]),'llamadaExp':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,83,86,90,92,94,95,104,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'arreglo':([15,16,25,26,27,32,33,34,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,81,82,83,86,87,90,92,94,95,104,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,127,47,47,132,47,47,47,47,47,]),'paramExp':([25,26,48,83,],[51,53,88,128,]),'atributos':([30,56,],[58,96,]),'atributo':([30,56,58,96,],[59,59,100,100,]),'bloque':([31,49,102,136,144,160,],[60,89,142,147,157,162,]),'listaIndices':([46,123,126,133,],[84,84,84,84,]),'indice':([46,84,123,126,133,],[85,130,85,85,85,]),'elseIfInst':([60,157,],[103,161,]),'tipo':([138,141,],[148,155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> instrucciones','start',1,'p_inicio','gramatica.py',200),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',205),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','gramatica.py',206),
  ('instruccion -> printInst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',214),
  ('instruccion -> asignacion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',215),
  ('instruccion -> structs PTCOMA','instruccion',2,'p_instruccion','gramatica.py',216),
  ('instruccion -> ifInst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',217),
  ('instruccion -> whileInst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',218),
  ('instruccion -> forInst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',219),
  ('llamadaExp -> ID PARIZQ paramExp PARDER','llamadaExp',4,'p_llamada','gramatica.py',224),
  ('llamadaExp -> ID PARIZQ PARDER','llamadaExp',3,'p_llamada','gramatica.py',225),
  ('paramExp -> paramExp COMA expresion','paramExp',3,'p_param_expresion','gramatica.py',232),
  ('paramExp -> expresion','paramExp',1,'p_param_expresion','gramatica.py',233),
  ('printInst -> PRINT PARIZQ paramExp PARDER','printInst',4,'p_instruccion_print','gramatica.py',242),
  ('printInst -> PRINTLN PARIZQ paramExp PARDER','printInst',4,'p_instruccion_println','gramatica.py',246),
  ('asignacion -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo','asignacion',6,'p_asignacion','gramatica.py',251),
  ('asignacion -> ID IGUAL expresion','asignacion',3,'p_asignacion','gramatica.py',252),
  ('asignacion -> ID PUNTO ID IGUAL expresion','asignacion',5,'p_asignacion','gramatica.py',253),
  ('tipo -> TINT64','tipo',1,'p_tipo','gramatica.py',263),
  ('tipo -> TFLOAT64','tipo',1,'p_tipo','gramatica.py',264),
  ('tipo -> TSTRING','tipo',1,'p_tipo','gramatica.py',265),
  ('tipo -> TBOOL','tipo',1,'p_tipo','gramatica.py',266),
  ('tipo -> TCHAR','tipo',1,'p_tipo','gramatica.py',267),
  ('tipo -> TNULO','tipo',1,'p_tipo','gramatica.py',268),
  ('structs -> MUTABLE STRUCT ID atributos END','structs',5,'p_structs','gramatica.py',273),
  ('structs -> STRUCT ID atributos END','structs',4,'p_structs','gramatica.py',274),
  ('atributos -> atributos atributo','atributos',2,'p_atributos','gramatica.py',281),
  ('atributos -> atributo','atributos',1,'p_atributos','gramatica.py',282),
  ('atributo -> ID DOSPUNTOS DOSPUNTOS tipo PTCOMA','atributo',5,'p_atributo','gramatica.py',290),
  ('atributo -> ID PTCOMA','atributo',2,'p_atributo','gramatica.py',291),
  ('arreglo -> CORIZQ paramExp CORDER','arreglo',3,'p_arreglo','gramatica.py',299),
  ('arreglo -> ID listaIndices','arreglo',2,'p_arreglo','gramatica.py',300),
  ('listaIndices -> listaIndices indice','listaIndices',2,'p_listaIndices','gramatica.py',307),
  ('listaIndices -> indice','listaIndices',1,'p_listaIndices','gramatica.py',308),
  ('indice -> CORIZQ expresion CORDER','indice',3,'p_indice','gramatica.py',316),
  ('rango -> expresion DOSPUNTOS expresion','rango',3,'p_rango','gramatica.py',321),
  ('rango -> BEGIN DOSPUNTOS expresion','rango',3,'p_rango','gramatica.py',322),
  ('rango -> expresion DOSPUNTOS END','rango',3,'p_rango','gramatica.py',323),
  ('rango -> BEGIN DOSPUNTOS END','rango',3,'p_rango','gramatica.py',324),
  ('acceso -> acceso PUNTO acceso','acceso',3,'p_acceso','gramatica.py',330),
  ('acceso -> ID PUNTO ID','acceso',3,'p_acceso','gramatica.py',331),
  ('acceso -> arreglo PUNTO arreglo','acceso',3,'p_acceso','gramatica.py',332),
  ('acceso -> arreglo PUNTO ID','acceso',3,'p_acceso','gramatica.py',333),
  ('acceso -> ID PUNTO arreglo','acceso',3,'p_acceso','gramatica.py',334),
  ('acceso -> ID','acceso',1,'p_acceso','gramatica.py',335),
  ('acceso -> arreglo','acceso',1,'p_acceso','gramatica.py',336),
  ('bloque -> instrucciones','bloque',1,'p_bloque','gramatica.py',351),
  ('ifInst -> IF expresion bloque END','ifInst',4,'p_ifInst','gramatica.py',356),
  ('ifInst -> IF expresion bloque ELSE bloque END','ifInst',6,'p_ifInst','gramatica.py',357),
  ('ifInst -> IF expresion bloque elseIfInst END','ifInst',5,'p_ifInst','gramatica.py',358),
  ('elseIfInst -> ELSEIF expresion bloque','elseIfInst',3,'p_elseIfInst','gramatica.py',367),
  ('elseIfInst -> ELSEIF expresion bloque ELSE bloque','elseIfInst',5,'p_elseIfInst','gramatica.py',368),
  ('elseIfInst -> ELSEIF expresion bloque elseIfInst','elseIfInst',4,'p_elseIfInst','gramatica.py',369),
  ('whileInst -> WHILE expresion bloque END','whileInst',4,'p_whileInst','gramatica.py',379),
  ('forInst -> FOR ID IN expresion bloque END','forInst',6,'p_forInst','gramatica.py',384),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',389),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',390),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',391),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','gramatica.py',392),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_binaria','gramatica.py',393),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_binaria','gramatica.py',394),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_binaria','gramatica.py',396),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_binaria','gramatica.py',397),
  ('expresion -> expresion MAYIGUAL expresion','expresion',3,'p_expresion_binaria','gramatica.py',398),
  ('expresion -> expresion MENIGUAL expresion','expresion',3,'p_expresion_binaria','gramatica.py',399),
  ('expresion -> expresion IGUALDAD expresion','expresion',3,'p_expresion_binaria','gramatica.py',400),
  ('expresion -> expresion DISTINTO expresion','expresion',3,'p_expresion_binaria','gramatica.py',401),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','gramatica.py',403),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','gramatica.py',404),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','gramatica.py',438),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','gramatica.py',439),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',447),
  ('expresion -> ENTERO','expresion',1,'p_expresion_basica','gramatica.py',451),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_basica','gramatica.py',452),
  ('expresion -> STRING','expresion',1,'p_expresion_basica','gramatica.py',453),
  ('expresion -> CHAR','expresion',1,'p_expresion_basica','gramatica.py',454),
  ('expresion -> TRUE','expresion',1,'p_expresion_basica','gramatica.py',455),
  ('expresion -> FALSE','expresion',1,'p_expresion_basica','gramatica.py',456),
  ('expresion -> NOTHING','expresion',1,'p_expresion_basica','gramatica.py',457),
  ('expresion -> rango','expresion',1,'p_expresion_basica','gramatica.py',458),
  ('expresion -> acceso','expresion',1,'p_expresion_basica','gramatica.py',459),
  ('expresion -> llamadaExp','expresion',1,'p_expresion_basica','gramatica.py',460),
]
