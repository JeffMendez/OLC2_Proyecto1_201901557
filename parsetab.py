
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORDIVIDIDOrightUMENOSCORDER CORIZQ DECIMAL DIVIDIDO ENTERO MAS MENOS PARDER PARIZQ POR PTCOMA REVALUARstart : instruccionesinstrucciones    : instrucciones instruccion \n                        | instruccion instruccion : REVALUAR CORIZQ expresion CORDER PTCOMAexpresion    : expresion MAS expresion\n                    | expresion MENOS expresion\n                    | expresion POR expresion\n                    | expresion DIVIDIDO expresionexpresion : MENOS expresion %prec UMENOSexpresion : PARIZQ expresion PARDERexpresion    : ENTERO\n                    | DECIMAL'
    
_lr_action_items = {'REVALUAR':([0,2,3,5,19,],[4,4,-3,-2,-4,]),'$end':([1,2,3,5,19,],[0,-1,-3,-2,-4,]),'CORIZQ':([4,],[6,]),'MENOS':([6,7,8,9,10,11,13,14,15,16,17,18,20,21,22,23,24,],[8,14,8,8,-11,-12,8,8,8,8,-9,14,-5,-6,-7,-8,-10,]),'PARIZQ':([6,8,9,13,14,15,16,],[9,9,9,9,9,9,9,]),'ENTERO':([6,8,9,13,14,15,16,],[10,10,10,10,10,10,10,]),'DECIMAL':([6,8,9,13,14,15,16,],[11,11,11,11,11,11,11,]),'CORDER':([7,10,11,17,20,21,22,23,24,],[12,-11,-12,-9,-5,-6,-7,-8,-10,]),'MAS':([7,10,11,17,18,20,21,22,23,24,],[13,-11,-12,-9,13,-5,-6,-7,-8,-10,]),'POR':([7,10,11,17,18,20,21,22,23,24,],[15,-11,-12,-9,15,15,15,-7,-8,-10,]),'DIVIDIDO':([7,10,11,17,18,20,21,22,23,24,],[16,-11,-12,-9,16,16,16,-7,-8,-10,]),'PARDER':([10,11,17,18,20,21,22,23,24,],[-11,-12,-9,24,-5,-6,-7,-8,-10,]),'PTCOMA':([12,],[19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,5,]),'expresion':([6,8,9,13,14,15,16,],[7,17,18,20,21,22,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> instrucciones','start',1,'p_inicio','gramatica.py',73),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',78),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','gramatica.py',79),
  ('instruccion -> REVALUAR CORIZQ expresion CORDER PTCOMA','instruccion',5,'p_instruccion','gramatica.py',87),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',91),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',92),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',93),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','gramatica.py',94),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','gramatica.py',106),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',110),
  ('expresion -> ENTERO','expresion',1,'p_expresion_basica','gramatica.py',114),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_basica','gramatica.py',115),
]
