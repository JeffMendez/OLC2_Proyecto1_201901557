
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUALDADDISTINTOleftMAYORMENORMAYIGUALMENIGUALleftMASMENOSleftPORDIVIDIDOleftPOTENCIAleftMODULOrightNOTrightUMENOSAND CHAR COMA CORDER CORIZQ DECIMAL DISTINTO DIVIDIDO DOSPUNTOS ELSE ELSEIF END ENTERO FALSE ID IF IGUAL IGUALDAD MAS MAYIGUAL MAYOR MENIGUAL MENOR MENOS MODULO NOT NOTHING OR PARDER PARIZQ POR POTENCIA PRINT PRINTLN PTCOMA REVALUAR STRING TBOOL TCHAR TFLOAT64 TINT64 TNULO TRUE TSTRINGstart : instruccionesinstrucciones    : instrucciones instruccion \n                        | instruccion instruccion  : printInst PTCOMA\n                    | asignacion PTCOMA\n                    | ifInst PTCOMAprintInst : PRINT PARIZQ paramExp PARDERprintInst : PRINTLN PARIZQ paramExp PARDERparamExp     : paramExp COMA expresion\n                    | expresionasignacion   : ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo\n                    | ID IGUAL expresiontipo : TINT64\n            | TFLOAT64\n            | TSTRING\n            | TBOOL\n            | TCHAR\n            | TNULObloque : instruccionesifInst   : IF expresion bloque END\n                | IF expresion bloque ELSE bloque END\n                | IF expresion bloque elseIfInst ENDelseIfInst   : ELSEIF expresion bloque\n                    | ELSEIF expresion bloque ELSE bloque\n                    | ELSEIF expresion bloque elseIfInstexpresion    : expresion MAS expresion\n                    | expresion MENOS expresion\n                    | expresion POR expresion\n                    | expresion DIVIDIDO expresion\n                    | expresion POTENCIA expresion\n                    | expresion MODULO expresion\n                    \n                    | expresion MAYOR expresion\n                    | expresion MENOR expresion\n                    | expresion MAYIGUAL expresion\n                    | expresion MENIGUAL expresion\n                    | expresion IGUALDAD expresion\n                    | expresion DISTINTO expresion\n                    \n                    | expresion AND expresion\n                    | expresion OR expresionexpresion    : MENOS expresion %prec UMENOS\n                    | NOT expresion %prec UMENOSexpresion : PARIZQ expresion PARDERexpresion    : ENTERO\n                    | DECIMAL\n                    | STRING\n                    | CHAR\n                    | TRUE\n                    | FALSE\n                    | NOTHING\n                    | ID'
    
_lr_action_items = {'PRINT':([0,2,3,11,12,13,14,18,22,23,24,25,26,27,28,29,49,50,51,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,90,],[7,7,-3,-2,-4,-5,-6,7,-43,-44,-45,-46,-47,-48,-49,-50,7,-40,-41,7,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-42,7,7,]),'PRINTLN':([0,2,3,11,12,13,14,18,22,23,24,25,26,27,28,29,49,50,51,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,90,],[8,8,-3,-2,-4,-5,-6,8,-43,-44,-45,-46,-47,-48,-49,-50,8,-40,-41,8,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-42,8,8,]),'ID':([0,2,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,90,],[9,9,-3,29,-2,-4,-5,-6,29,29,29,9,29,29,29,-43,-44,-45,-46,-47,-48,-49,-50,29,29,29,29,29,29,29,29,29,29,29,29,29,29,9,-40,-41,29,9,29,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-42,9,9,]),'IF':([0,2,3,11,12,13,14,18,22,23,24,25,26,27,28,29,49,50,51,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,90,],[10,10,-3,-2,-4,-5,-6,10,-43,-44,-45,-46,-47,-48,-49,-50,10,-40,-41,10,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-42,10,10,]),'$end':([1,2,3,11,12,13,14,],[0,-1,-3,-2,-4,-5,-6,]),'END':([3,11,12,13,14,34,49,59,78,89,91,92,],[-3,-2,-4,-5,-6,57,-19,79,88,-23,-25,-24,]),'ELSE':([3,11,12,13,14,34,49,89,],[-3,-2,-4,-5,-6,58,-19,90,]),'ELSEIF':([3,11,12,13,14,34,49,89,],[-3,-2,-4,-5,-6,60,-19,60,]),'PTCOMA':([4,5,6,22,23,24,25,26,27,28,29,33,50,51,53,55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,81,82,83,84,85,86,87,88,],[12,13,14,-43,-44,-45,-46,-47,-48,-49,-50,-12,-40,-41,-7,-8,-20,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-42,-22,-11,-13,-14,-15,-16,-17,-18,-21,]),'PARIZQ':([7,8,10,15,16,17,19,20,21,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,60,],[15,16,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'IGUAL':([9,],[17,]),'MENOS':([10,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[19,19,19,19,36,19,19,19,-43,-44,-45,-46,-47,-48,-49,-50,36,36,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-40,-41,36,19,19,-26,-27,-28,-29,-30,-31,36,36,36,36,36,36,36,36,-42,36,36,]),'NOT':([10,15,16,17,19,20,21,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,60,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'ENTERO':([10,15,16,17,19,20,21,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,60,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'DECIMAL':([10,15,16,17,19,20,21,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,60,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'STRING':([10,15,16,17,19,20,21,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,60,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'CHAR':([10,15,16,17,19,20,21,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,60,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TRUE':([10,15,16,17,19,20,21,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,60,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FALSE':([10,15,16,17,19,20,21,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,60,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'NOTHING':([10,15,16,17,19,20,21,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,60,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'MAS':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[35,-43,-44,-45,-46,-47,-48,-49,-50,35,35,-40,-41,35,-26,-27,-28,-29,-30,-31,35,35,35,35,35,35,35,35,-42,35,35,]),'POR':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[37,-43,-44,-45,-46,-47,-48,-49,-50,37,37,-40,-41,37,37,37,-28,-29,-30,-31,37,37,37,37,37,37,37,37,-42,37,37,]),'DIVIDIDO':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[38,-43,-44,-45,-46,-47,-48,-49,-50,38,38,-40,-41,38,38,38,-28,-29,-30,-31,38,38,38,38,38,38,38,38,-42,38,38,]),'POTENCIA':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[39,-43,-44,-45,-46,-47,-48,-49,-50,39,39,-40,-41,39,39,39,39,39,-30,-31,39,39,39,39,39,39,39,39,-42,39,39,]),'MODULO':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[40,-43,-44,-45,-46,-47,-48,-49,-50,40,40,-40,-41,40,40,40,40,40,40,-31,40,40,40,40,40,40,40,40,-42,40,40,]),'MAYOR':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[41,-43,-44,-45,-46,-47,-48,-49,-50,41,41,-40,-41,41,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,41,41,41,41,-42,41,41,]),'MENOR':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[42,-43,-44,-45,-46,-47,-48,-49,-50,42,42,-40,-41,42,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,42,42,42,42,-42,42,42,]),'MAYIGUAL':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[43,-43,-44,-45,-46,-47,-48,-49,-50,43,43,-40,-41,43,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,43,43,43,43,-42,43,43,]),'MENIGUAL':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[44,-43,-44,-45,-46,-47,-48,-49,-50,44,44,-40,-41,44,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,44,44,44,44,-42,44,44,]),'IGUALDAD':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[45,-43,-44,-45,-46,-47,-48,-49,-50,45,45,-40,-41,45,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,45,45,-42,45,45,]),'DISTINTO':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[46,-43,-44,-45,-46,-47,-48,-49,-50,46,46,-40,-41,46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,46,46,-42,46,46,]),'AND':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[47,-43,-44,-45,-46,-47,-48,-49,-50,47,47,-40,-41,47,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,47,-42,47,47,]),'OR':([18,22,23,24,25,26,27,28,29,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,],[48,-43,-44,-45,-46,-47,-48,-49,-50,48,48,-40,-41,48,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-42,48,48,]),'PARDER':([22,23,24,25,26,27,28,29,30,31,32,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,],[-43,-44,-45,-46,-47,-48,-49,-50,53,-10,55,-40,-41,75,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-42,-9,]),'COMA':([22,23,24,25,26,27,28,29,30,31,32,50,51,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,],[-43,-44,-45,-46,-47,-48,-49,-50,54,-10,54,-40,-41,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-42,-9,]),'DOSPUNTOS':([22,23,24,25,26,27,28,29,33,50,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-43,-44,-45,-46,-47,-48,-49,-50,56,-40,-41,77,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-42,]),'TINT64':([77,],[82,]),'TFLOAT64':([77,],[83,]),'TSTRING':([77,],[84,]),'TBOOL':([77,],[85,]),'TCHAR':([77,],[86,]),'TNULO':([77,],[87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'instrucciones':([0,18,58,80,90,],[2,49,49,49,49,]),'instruccion':([0,2,18,49,58,80,90,],[3,11,3,11,3,3,3,]),'printInst':([0,2,18,49,58,80,90,],[4,4,4,4,4,4,4,]),'asignacion':([0,2,18,49,58,80,90,],[5,5,5,5,5,5,5,]),'ifInst':([0,2,18,49,58,80,90,],[6,6,6,6,6,6,6,]),'expresion':([10,15,16,17,19,20,21,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,60,],[18,31,31,33,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,80,]),'paramExp':([15,16,],[30,32,]),'bloque':([18,58,80,90,],[34,78,89,92,]),'elseIfInst':([34,89,],[59,91,]),'tipo':([77,],[81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> instrucciones','start',1,'p_inicio','gramatica.py',179),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',184),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','gramatica.py',185),
  ('instruccion -> printInst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',193),
  ('instruccion -> asignacion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',194),
  ('instruccion -> ifInst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',195),
  ('printInst -> PRINT PARIZQ paramExp PARDER','printInst',4,'p_instruccion_print','gramatica.py',200),
  ('printInst -> PRINTLN PARIZQ paramExp PARDER','printInst',4,'p_instruccion_println','gramatica.py',204),
  ('paramExp -> paramExp COMA expresion','paramExp',3,'p_param_expresion','gramatica.py',208),
  ('paramExp -> expresion','paramExp',1,'p_param_expresion','gramatica.py',209),
  ('asignacion -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo','asignacion',6,'p_asignacion','gramatica.py',218),
  ('asignacion -> ID IGUAL expresion','asignacion',3,'p_asignacion','gramatica.py',219),
  ('tipo -> TINT64','tipo',1,'p_tipo','gramatica.py',227),
  ('tipo -> TFLOAT64','tipo',1,'p_tipo','gramatica.py',228),
  ('tipo -> TSTRING','tipo',1,'p_tipo','gramatica.py',229),
  ('tipo -> TBOOL','tipo',1,'p_tipo','gramatica.py',230),
  ('tipo -> TCHAR','tipo',1,'p_tipo','gramatica.py',231),
  ('tipo -> TNULO','tipo',1,'p_tipo','gramatica.py',232),
  ('bloque -> instrucciones','bloque',1,'p_bloque','gramatica.py',237),
  ('ifInst -> IF expresion bloque END','ifInst',4,'p_ifInst','gramatica.py',242),
  ('ifInst -> IF expresion bloque ELSE bloque END','ifInst',6,'p_ifInst','gramatica.py',243),
  ('ifInst -> IF expresion bloque elseIfInst END','ifInst',5,'p_ifInst','gramatica.py',244),
  ('elseIfInst -> ELSEIF expresion bloque','elseIfInst',3,'p_elseIfInst','gramatica.py',255),
  ('elseIfInst -> ELSEIF expresion bloque ELSE bloque','elseIfInst',5,'p_elseIfInst','gramatica.py',256),
  ('elseIfInst -> ELSEIF expresion bloque elseIfInst','elseIfInst',4,'p_elseIfInst','gramatica.py',257),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',266),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',267),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',268),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','gramatica.py',269),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_binaria','gramatica.py',270),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_binaria','gramatica.py',271),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_binaria','gramatica.py',273),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_binaria','gramatica.py',274),
  ('expresion -> expresion MAYIGUAL expresion','expresion',3,'p_expresion_binaria','gramatica.py',275),
  ('expresion -> expresion MENIGUAL expresion','expresion',3,'p_expresion_binaria','gramatica.py',276),
  ('expresion -> expresion IGUALDAD expresion','expresion',3,'p_expresion_binaria','gramatica.py',277),
  ('expresion -> expresion DISTINTO expresion','expresion',3,'p_expresion_binaria','gramatica.py',278),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','gramatica.py',280),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','gramatica.py',281),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','gramatica.py',315),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','gramatica.py',316),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',324),
  ('expresion -> ENTERO','expresion',1,'p_expresion_basica','gramatica.py',328),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_basica','gramatica.py',329),
  ('expresion -> STRING','expresion',1,'p_expresion_basica','gramatica.py',330),
  ('expresion -> CHAR','expresion',1,'p_expresion_basica','gramatica.py',331),
  ('expresion -> TRUE','expresion',1,'p_expresion_basica','gramatica.py',332),
  ('expresion -> FALSE','expresion',1,'p_expresion_basica','gramatica.py',333),
  ('expresion -> NOTHING','expresion',1,'p_expresion_basica','gramatica.py',334),
  ('expresion -> ID','expresion',1,'p_expresion_basica','gramatica.py',335),
]
